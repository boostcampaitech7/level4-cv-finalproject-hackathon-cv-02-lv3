[2025-01-30 10:57:28] 1 - best R2: 0.753
[2025-01-30 10:57:28] StandardScaler() - VarianceThreshold() - RandomForestRegressor()
[2025-01-30 10:57:44] 2 - best R2: 0.760
[2025-01-30 10:57:44] passthrough - SelectKBest(score_func=<function f_regression at 0x7f69b25165f0>) - RandomForestRegressor()
[2025-01-30 11:12:04] 1 - best R2: 0.753
[2025-01-30 11:12:04] StandardScaler() - passthrough - RandomForestRegressor()
[2025-01-30 11:12:48] 2 - best R2: 0.756
[2025-01-30 11:12:48] StandardScaler() - SelectKBest(score_func=<function f_regression at 0x7fd255222d40>) - RandomForestRegressor()
[2025-01-30 12:02:22] 1 - best R2: 0.734
[2025-01-30 12:02:22] RobustScaler() - passthrough - RandomForestRegressor()
[2025-01-30 12:02:54] 2 - best R2: 0.746
[2025-01-30 12:02:54] PolynomialFeatures() - VarianceThreshold() - RandomForestRegressor()
[2025-01-30 12:06:39] 1 - best R2: 0.734
[2025-01-30 12:06:39] StandardScaler() - SelectKBest(score_func=<function f_regression at 0x7f3e9d452d40>) - RandomForestRegressor()
[2025-01-30 12:07:20] 2 - best R2: 0.736
[2025-01-30 12:07:20] passthrough - passthrough - RandomForestRegressor()
[2025-01-30 12:10:51] 1 - best R2: 0.737
[2025-01-30 12:10:51] RobustScaler() - VarianceThreshold() - RandomForestRegressor()
[2025-01-30 12:11:37] 2 - best R2: 0.737
[2025-01-30 12:11:37] RobustScaler() - VarianceThreshold() - RandomForestRegressor()
[2025-01-30 13:16:20] 1 - best R2: 0.738
[2025-01-30 13:16:20] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f40e58bbe20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:17:14] 1 - best R2: 0.738
[2025-01-30 13:17:14] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f08db3c7e20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:17:53] 1 - best R2: 0.738
[2025-01-30 13:17:53] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f6e0a497d90>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:18:36] 1 - best R2: 0.738
[2025-01-30 13:18:36] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7fa0b12f7d90>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:23:31] 1 - best R2: 0.742
[2025-01-30 13:23:31] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:23:52] 2 - best R2: 0.742
[2025-01-30 13:23:52] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:25:02] 1 - best R2: 0.742
[2025-01-30 13:25:02] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:25:35] 2 - best R2: 0.742
[2025-01-30 13:25:35] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:28:18] 1 - best R2: 0.742
[2025-01-30 13:28:18] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:29:05] 2 - best R2: 0.742
[2025-01-30 13:29:05] {'class': PolynomialFeatures()} - passthrough - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:30:32] 1 - best R2: 0.738
[2025-01-30 13:30:32] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f83de99fe20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:33:53] 1 - best R2: 0.738
[2025-01-30 13:33:53] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7fb88ad8fe20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:37:25] 1 - best R2: 0.738
[2025-01-30 13:37:25] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7fe5c1edfe20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:39:33] 1 - best R2: 0.738
[2025-01-30 13:39:33] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f5d2bd13e20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 13:40:55] 2 - best R2: 0.738
[2025-01-30 13:40:55] {'class': StandardScaler()} - {'class': SelectKBest(score_func=<function f_regression at 0x7f5d2bd13e20>)} - {'class': <class 'xgboost.sklearn.XGBRegressor'>, 'params': {'n_estimators': 100, 'learning_rate': 0.1, 'max_depth': 6}}
[2025-01-30 14:24:40] 1 - best R2: 0.738
[2025-01-30 14:25:18] 1 - best R2: 0.738
[2025-01-30 14:27:56] 1 - best R2: 0.738
[2025-01-30 14:29:05] 1 - best R2: 0.738
[2025-01-30 14:30:07] 1 - best R2: 0.738
[2025-01-30 14:35:25] 1 - best R2: 0.738
[2025-01-30 14:37:00] 1 - best R2: 0.738
[2025-01-30 14:38:04] 1 - best R2: 0.738
[2025-01-30 14:43:36] 1 - best R2: 0.738
[2025-01-30 17:26:13] 1 - best R2: 0.738
[2025-01-30 17:31:51] 1 - best R2: 0.738
[2025-01-30 17:32:35] 2 - best R2: 0.738
[2025-01-30 17:34:28] 1 - best R2: 0.738
[2025-01-30 17:34:33] 2 - best R2: 0.738
[2025-01-30 17:37:52] 1 - best R2: 0.742
[2025-01-30 17:38:35] 2 - best R2: 0.742
[2025-01-30 17:40:57] 1 - best R2: 0.742
[2025-01-30 17:41:41] 2 - best R2: 0.742
[2025-01-30 17:43:36] 1 - best R2: 0.742
[2025-01-30 17:44:21] 2 - best R2: 0.742
[2025-01-30 17:45:05] 1 - best R2: 0.742
[2025-01-30 17:45:49] 2 - best R2: 0.742
[2025-01-30 17:47:52] 1 - best R2: 0.742
[2025-01-30 17:48:36] 2 - best R2: 0.742
[2025-01-30 17:51:47] 1 - best R2: 0.742
[2025-01-30 17:52:31] 2 - best R2: 0.742
[2025-01-30 17:56:11] 1 - best R2: 0.738
[2025-01-30 17:56:13] 2 - best R2: 0.738
[2025-01-30 17:56:54] 1 - best R2: 0.738
[2025-01-30 17:57:04] 2 - best R2: 0.742
[2025-01-30 18:01:36] 1 - best R2: 0.738
[2025-01-30 18:01:40] 2 - best R2: 0.738
[2025-01-30 18:03:30] 1 - best R2: 0.738
[2025-01-30 18:03:34] 2 - best R2: 0.738
[2025-01-30 18:06:23] 1 - best R2: 0.738
[2025-01-30 18:06:27] 2 - best R2: 0.738
[2025-01-30 18:09:20] 1 - best R2: 0.738
[2025-01-30 18:13:15] 1 - best R2: 0.738
[2025-01-30 18:14:11] 2 - best R2: 0.738
[2025-01-30 18:17:26] 1 - best R2: 0.742
[2025-01-30 18:18:23] 2 - best R2: 0.742
[2025-01-30 18:21:26] 1 - best R2: 0.738
[2025-01-30 18:22:41] 1 - best R2: 0.738
[2025-01-30 18:22:43] 2 - best R2: 0.738
[2025-01-30 18:23:55] 1 - best R2: 0.742
[2025-01-30 18:24:50] 2 - best R2: 0.742
[2025-01-30 18:26:56] 1 - best R2: 0.742
[2025-01-30 18:27:44] 2 - best R2: 0.744
[2025-01-30 18:28:46] 3 - best R2: 0.744
[2025-01-30 18:29:21] 4 - best R2: 0.744
[2025-01-30 18:29:54] 5 - best R2: 0.745
[2025-01-30 18:31:58] 1 - best R2: 0.742
[2025-01-30 18:32:54] 2 - best R2: 0.742
[2025-01-30 18:36:48] 1 - best R2: 0.742
[2025-01-30 18:37:18] 2 - best R2: 0.742
[2025-01-30 18:37:49] 3 - best R2: 0.742
[2025-01-30 18:38:21] 4 - best R2: 0.743
[2025-01-30 18:39:26] 5 - best R2: 0.745
